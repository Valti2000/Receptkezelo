// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recept.Data;

#nullable disable

namespace Recept.Migrations
{
    [DbContext(typeof(ReceptekContext))]
    partial class ReceptekContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recept.Entity.Generated.Alapanyag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "KategoriaId" }, "IX_Alapanyag_KategoriaId");

                    b.ToTable("Alapanyag", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.AlapanyagAllergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlapanyagId")
                        .HasColumnType("int");

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.Property<bool>("Tartalmaz")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AlapanyagId" }, "IX_AlapanyagAllergen_AlapanyagId");

                    b.HasIndex(new[] { "AllergenId" }, "IX_AlapanyagAllergen_AllergenId");

                    b.ToTable("AlapanyagAllergen", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergen", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.Csoport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Csoport", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.Hozzavalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlapanyagId")
                        .HasColumnType("int");

                    b.Property<int>("CsoportId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<double>("Mennyiseg")
                        .HasColumnType("float");

                    b.Property<string>("Mertekegyseg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AlapanyagId" }, "IX_Hozzavalo_AlapanyagId");

                    b.HasIndex(new[] { "CsoportId" }, "IX_Hozzavalo_CsoportId");

                    b.ToTable("Hozzavalo", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.Kategorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Receptek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("ElokeszitesiIdo")
                        .HasColumnType("int");

                    b.Property<int>("FozesiIdo")
                        .HasColumnType("int");

                    b.Property<string>("Leiras")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Receptek", (string)null);
                });

            modelBuilder.Entity("Recept.Entity.Generated.ReceptHozzavalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HozzavaloId")
                        .HasColumnType("int");

                    b.Property<int>("ReceptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HozzavaloId");

                    b.HasIndex("ReceptId");

                    b.ToTable("ReceptHozzavalo");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Alapanyag", b =>
                {
                    b.HasOne("Recept.Entity.Generated.Kategorium", "Kategoria")
                        .WithMany("Alapanyags")
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("Recept.Entity.Generated.AlapanyagAllergen", b =>
                {
                    b.HasOne("Recept.Entity.Generated.Alapanyag", "Alapanyag")
                        .WithMany("AlapanyagAllergens")
                        .HasForeignKey("AlapanyagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recept.Entity.Generated.Allergen", "Allergen")
                        .WithMany("AlapanyagAllergens")
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alapanyag");

                    b.Navigation("Allergen");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Hozzavalo", b =>
                {
                    b.HasOne("Recept.Entity.Generated.Alapanyag", "Alapanyag")
                        .WithMany("Hozzavalos")
                        .HasForeignKey("AlapanyagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recept.Entity.Generated.Csoport", "Csoport")
                        .WithMany("Hozzavalok")
                        .HasForeignKey("CsoportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alapanyag");

                    b.Navigation("Csoport");
                });

            modelBuilder.Entity("Recept.Entity.Generated.ReceptHozzavalo", b =>
                {
                    b.HasOne("Recept.Entity.Generated.Hozzavalo", "Hozzavalo")
                        .WithMany()
                        .HasForeignKey("HozzavaloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recept.Entity.Generated.Receptek", "Recept")
                        .WithMany("ReceptHozzavalok")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hozzavalo");

                    b.Navigation("Recept");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Alapanyag", b =>
                {
                    b.Navigation("AlapanyagAllergens");

                    b.Navigation("Hozzavalos");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Allergen", b =>
                {
                    b.Navigation("AlapanyagAllergens");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Csoport", b =>
                {
                    b.Navigation("Hozzavalok");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Kategorium", b =>
                {
                    b.Navigation("Alapanyags");
                });

            modelBuilder.Entity("Recept.Entity.Generated.Receptek", b =>
                {
                    b.Navigation("ReceptHozzavalok");
                });
#pragma warning restore 612, 618
        }
    }
}
